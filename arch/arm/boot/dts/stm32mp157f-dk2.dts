// SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-3-Clause)
/*
 * Copyright (C) STMicroelectronics 2022 - All Rights Reserved
 * Author: Alexandre Torgue <alexandre.torgue@foss.st.com> for STMicroelectronics.
 */

/dts-v1/;

#include "stm32mp157.dtsi"
#include "stm32mp15xf.dtsi"
#include "stm32mp15-pinctrl.dtsi"
#include "stm32mp15xxac-pinctrl.dtsi"
#include "stm32mp15xx-dkx.dtsi"
#include "stm32mp157c-dk2-scmi.dtsi"
#include <dt-bindings/rtc/rtc-stm32.h>

/ {
	model = "STMicroelectronics STM32MP157F-DK2 Discovery Board";
	compatible = "st,stm32mp157f-dk2", "st,stm32mp157";

	aliases {
		serial3 = &usart2;
	};

	chosen {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;
		stdout-path = "serial0:115200n8";

		framebuffer {
			compatible = "simple-framebuffer";
			clocks = <&rcc LTDC_PX>;
			status = "disabled";
		};
	};

	wifi_pwrseq: wifi-pwrseq {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&gpioh 4 GPIO_ACTIVE_LOW>;
	};

	led {
		compatible = "gpio-leds";

		led-orange {
			label = "orange";
			gpios = <&gpioh 7 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};
	};

	button {
		compatible = "gpio-keys";
		autorepeat;

		key-up {
			label = "GPIO Key UP";
			linux,code = <103>;
			gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
		};

		key-down {
			label = "GPIO Key DOWN";
			linux,code = <108>;
			gpios = <&gpioa 14 GPIO_ACTIVE_LOW>;
		};
	};
};

&cryp1 {
	status = "okay";
};

&dsi {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			dsi_in: endpoint {
				remote-endpoint = <&ltdc_ep1_out>;
			};
		};

		port@1 {
			reg = <1>;
			dsi_out: endpoint {
				remote-endpoint = <&panel_in>;
			};
		};
	};

	panel_otm8009a: panel-otm8009a@0 {
		compatible = "orisetech,otm8009a";
		reg = <0>;
		reset-gpios = <&gpioe 4 GPIO_ACTIVE_LOW>;
		power-supply = <&v3v3>;
		status = "okay";

		port {
			panel_in: endpoint {
				remote-endpoint = <&dsi_out>;
			};
		};
	};
};

&i2c1 {
	touchscreen@38 {
		compatible = "focaltech,ft6236";
		reg = <0x38>;
		interrupts = <2 2>;
		interrupt-parent = <&gpiof>;
		interrupt-controller;
		touchscreen-size-x = <480>;
		touchscreen-size-y = <800>;
		vcc-supply = <&v3v3>;
		iovcc-supply = <&v3v3>;
		panel = <&panel_otm8009a>;
		status = "okay";
	};
};

&i2c5 {
	status = "okay";

	ina219@40 {
		compatible = "ti,ina219";
		reg = <0x40>;
		shunt-resistor = <100000>; /* = 100 mOhm */
	};
};

&spi5 {
	cs-gpios = <&gpiog 15 GPIO_ACTIVE_HIGH>;
	status = "okay";

	spidev@0{
        compatible = "rohm,dh2228fv";
        reg = <0>;
        spi-max-frequency = <80000000>;
		status = "disabled";
    };

	display@0{
		compatible = "sitronix,st7789v";
		reg = <0>;
		spi-max-frequency = <80000000>;
		dc-gpios = <&gpioa 8 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpiod 7 GPIO_ACTIVE_HIGH>;
		rotation = <0>;
		status = "okay";
	};
};

&ltdc {
	status = "okay";

	port {
		#address-cells = <1>;
		#size-cells = <0>;

		ltdc_ep1_out: endpoint@1 {
			reg = <1>;
			remote-endpoint = <&dsi_in>;
		};
	};
};

&rtc {
	st,lsco = <RTC_OUT2_RMP>;
	pinctrl-0 = <&rtc_out2_rmp_pins_a>;
	pinctrl-names = "default";
};

/* Wifi */
&sdmmc2 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc2_b4_pins_a>;
	pinctrl-1 = <&sdmmc2_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a>;
	non-removable;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	mmc-pwrseq = <&wifi_pwrseq>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
		interrupt-parent = <&gpiod>;
		interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; /* WL_HOST_WAKE */
		interrupt-names = "host-wake";
	};
};

/* Bluetooth */
&usart2 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&usart2_pins_c>;
	pinctrl-1 = <&usart2_sleep_pins_c>;
	pinctrl-2 = <&usart2_idle_pins_c>;
	uart-has-rtscts;
	status = "okay";

	bluetooth {
		shutdown-gpios = <&gpioz 6 GPIO_ACTIVE_HIGH>;
		compatible = "brcm,bcm43438-bt";
		max-speed = <3000000>;
		vbat-supply = <&v3v3>;
		vddio-supply = <&v3v3>;
	};
};

&usart3 {
	status = "okay";
};

&pwm1_pins_a {
	pins {
		pinmux = <STM32_PINMUX('E', 9, AF1)>, /* TIM1_CH1 */
				<STM32_PINMUX('E', 11, AF1)>, /* TIM1_CH2 */
				<STM32_PINMUX('E', 13, AF1)>, /* TIM1_CH3 */
				<STM32_PINMUX('E', 14, AF1)>; /* TIM1_CH4 */
	};
};

&pwm1_sleep_pins_a {
	pins {
		pinmux = <STM32_PINMUX('E', 9, ANALOG)>, /* TIM1_CH1 */
				<STM32_PINMUX('E', 11, ANALOG)>, /* TIM1_CH2 */
				<STM32_PINMUX('E', 13, ANALOG)>, /* TIM1_CH2 */
				<STM32_PINMUX('E', 14, ANALOG)>; /* TIM1_CH4 */
	};
};

&timers1 {
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";

	pwm {
		pinctrl-0 = <&pwm1_pins_a>;
		pinctrl-1 = <&pwm1_sleep_pins_a>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	
	timer@0 {
		status = "okay";
	};
};
